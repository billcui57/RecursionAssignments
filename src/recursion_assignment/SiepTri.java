/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package recursion_assignment;

import java.awt.Graphics;

/**
 *
 * @author 348848128
 */
public class SiepTri extends javax.swing.JPanel {

    /**
     * Creates new form SiepTri
     */
    public SiepTri() {
        initComponents();
    }
    
    @Override
    public void paintComponent(Graphics g){
        int xCent=this.getWidth()/2;
        int yCent=this.getHeight()/2;
        int size=100;
        
        sierp(g,5,xCent,yCent,100);
    }
    
    /**
     * Recursive method for drawing sierpinski triangles
     * @param g graphics
     * @param stage stage of recursion
     * @param xCent xcenter of equilaterial triangle
     * @param yCent ycenter of equilaterial triangle
     * @param size size of equilaterial triangle
     */
    public void sierp(Graphics g,int stage,int xCent,int yCent,int size){
        //draws a polygon with the vertices
        g.drawPolygon(getXVert(xCent,size), getYVert(yCent,size), 3);
        
        //base case
        if(stage==0){
            return;
        }
        
        
        //recursion step, three triangles beside previous stage triangle
        sierp(g,stage-1,(int)(xCent-size*Math.cos(Math.toRadians(30))),yCent+size/2,size/2);
        sierp(g,stage-1,(int)(xCent+size*Math.cos(Math.toRadians(30))),yCent+size/2,size/2);
        sierp(g,stage-1,xCent,yCent-size,size/2);
        
        
        
        
    }
    
    /**
     * gets the x vertices of triangle from center x
     * @param xCent x coord center
     * @param size size of triangle
     * @return x vertices
     */
    public static int[] getXVert(int xCent,int size){
        return new int[]{(int)(xCent+size*Math.cos(Math.toRadians(30))),(int)(xCent-size*Math.cos(Math.toRadians(30))),xCent};
        
    }
    
    /**
     * gets the y vertices of triangle from center y
     * @param yCent y coord center
     * @param size size of triangle
     * @return y vertices
     */
    public static int[] getYVert(int yCent,int size){
        return new int[]{(int)(yCent-size*Math.sin(Math.toRadians(30))),(int)(yCent-size*Math.sin(Math.toRadians(30))),yCent+size};
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
